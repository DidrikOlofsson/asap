##Rules
localrules: rMATSBamList, AddrMATSCoord

rule rMATSBamList:
    input: expand(path.join(STAR_DIR, "alignments", "{sample}", "Aligned.sortedByCoord.out.bam"), sample=SAMPLES)
    output: path.join(RMATS_DIR, "lists", "{condition}.list")
    threads: 1
    params:
        condition = "{condition}",
        bam_dir = path.join(STAR_DIR, "alignments")
    script: "scripts/list_bams.py"

rule RunrMATS:
    input:
        expand(path.join(RMATS_DIR, "lists", "{condition}.list"), condition=CONDITIONS)
    output:
        path.join(RMATS_DIR, "{comparison}", "SE.MATS.JCEC.txt")
    params:
        annotation = ANNOTATION,
        comparison = "{comparison}",
        read_len = config["parameters"]["general"]["read_length"],
        star_idx = path.join(STAR_DIR, "index"),
        cstat = config["parameters"]["rmats"]["cstat"],
        list_dir = path.join(RMATS_DIR, "lists"),
        output_dir = path.join(RMATS_DIR, "{comparison}"),
        partition = "main",
        nodes = "1",
        ntasks = "6",
        time = "06:00:00",
        mem = "8G",
        mail_user = "didrio87@zedat.fu-berlin.de",
        mail_type = "end"
    singularity:
        "library://agheyd/default/rmats:latest"
    log:
        path.join(LOG_DIR, "rmats", "run", "{comparison}.log")
    shell:
        '''
        comp={params.comparison}
        C1=${{comp%%_vs_*}}
        C2=${{comp##*_vs_}}
        list_dir={params.list_dir}
        L1=${{list_dir}}/${{C1}}.list
        L2=${{list_dir}}/${{C2}}.list

        rmats.py --b1 $L1 --b2 $L2 -t paired --readLength {params.read_len} --gtf {params.annotation} --bi {params.star_idx} --od {params.output_dir} --nthread {params.ntasks} --cstat {params.cstat}
        '''

rule AddrMATSCoord:
    input: rules.RunrMATS.output
    output: path.join(RMATS_DIR, "{comparison}", "{comparison}.merged.w_coord.tsv")
    threads: 1
    params:
        rmats_dir = path.join(RMATS_DIR, "{comparison}")
    script: "scripts/add_coord.py"
